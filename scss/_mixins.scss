// ==========================================================================
// Mixins
// ==========================================================================

// BEM selectors

@mixin e($element) {
	&__#{$element} {
    @content;
  }
}
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

// ==========================================================================
// Spacing
// ==========================================================================

//Set Margin top & bottom
@mixin margin-tb($top, $bottom:null){
    margin-top: $top;
    @if($bottom == null){
        margin-bottom: $top;
    } @else{
        margin-bottom: $bottom;
    }
}

@mixin margin-lr($left, $right:null){
    margin-left: $left;
    @if($right == null){
        margin-right: $left;
    } @else{
        margin-right: $right;
    }
}

//Set Padding top & bottom
@mixin padding-tb($top, $bottom:null){
    padding-top: $top;
    @if($bottom == null){
        padding-bottom: $top;
    } @else{
        padding-bottom: $bottom;
    }
}

@mixin padding-lr($left, $right:null){
    padding-left: $left;
    @if($right == null){
        padding-right: $left;
    } @else{
        padding-right: $right;
    }
}



// ==========================================================================
// Text
// ==========================================================================

//Set font weight and size
@mixin font-ws($weight, $size){
    font-weight: $weight;
    font-size: $size;
}

@mixin font-position($display, $align){
    display: $display;
    text-align: $align;
}


// ==========================================================================
// Images
// ==========================================================================
// Generating :before or :after pseudo-element shapes

@mixin p-el(
	$el,
	$el-w: null,
	$el-h: null) {
	@if $el == "before" or $el == "after" { 
	  &:#{$el} {
		  @extend %pseudos;
		  width: $el-w;
	  	height: $el-h;
	    @content;
	  }
	} 
	@else {
    @error "`#{$el}` is not a valid pseudo-element.";
	}
}

// Image replacement

@mixin img-replace($img, $w, $h, $disp: block) {
	background-image: url('#{$path--rel}/#{$img}');
	background-repeat: no-repeat;
	width: $w;
	height: $h;
	display: $disp;
}
      
// Image replacement

@mixin img-replace($img, $w, $h, $disp: block) {
	background-image: url('#{$path--rel}/#{$img}');
	background-repeat: no-repeat;
	width: $w;
	height: $h;
	display: $disp;
}
     

@mixin img-max($w, $h){
    max-width: $w;
    max-height: $h;
}

@mixin img-size($w, $h){
    width: $w;
    height: $h;
}

// ==========================================================================
// Borders
// ==========================================================================
@mixin border-tb($thickness, $type, $color){
    border-top: $thickness $type $color;
    border-bottom: $thickness $type $color;
}

// ==========================================================================
// Background 
// ==========================================================================
@mixin background-kit($direction, $color-stop1, $color-stop2) {
    background: $color-stop1; /* For browsers that do not support gradients */
    background: -webkit-linear-gradient($direction, $color-stop1, $color-stop2); /* For Safari 5.1 to 6.0 */
    background: -o-linear-gradient($direction, $color-stop1, $color-stop2); /* For Opera 11.1 to 12.0 */
    background: -moz-linear-gradient($direction, $color-stop1, $color-stop2); /* For Firefox 3.6 to 15 */
    background: linear-gradient($direction, $color-stop1, $color-stop2); /* Standard syntax */
}


// ==========================================================================
// Media Queries
// ==========================================================================

@mixin mq($break) {
  @if $break == "small" {
    @media (min-width: $brkpoint-sm) and (max-width: $brkpoint-md) {
      @content;
    }
  }
  @else if $break == "medium" {
    @media (min-width: $brkpoint-md + 1) {
      @content;
    }
  }
  @else if $break == "large" {
    @media (min-width: $brkpoint-lg) {
      @content;
    }
  }
   @else {
   	@error "Whoops! No value could be retrieved for `#{$break}`. "
  }
}